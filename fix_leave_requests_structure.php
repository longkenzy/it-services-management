<?php
/**
 * Script s·ª≠a c·∫•u tr√∫c b·∫£ng leave_requests
 * Th√™m PRIMARY KEY v√† AUTO_INCREMENT cho c·ªôt id
 */

// B·∫≠t hi·ªÉn th·ªã l·ªói
ini_set('display_errors', 1);
ini_set('display_startup_errors', 1);
error_reporting(E_ALL);

echo "<h2>S·ª≠a c·∫•u tr√∫c b·∫£ng leave_requests</h2>";

try {
    require_once 'config/db.php';
    
    echo "<h3>1. Ki·ªÉm tra c·∫•u tr√∫c hi·ªán t·∫°i</h3>";
    
    // Ki·ªÉm tra c·∫•u tr√∫c c·ªôt id
    $stmt = $pdo->query("DESCRIBE leave_requests");
    $columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    $id_column = null;
    foreach ($columns as $column) {
        if ($column['Field'] === 'id') {
            $id_column = $column;
            break;
        }
    }
    
    if ($id_column) {
        echo "C·ªôt id hi·ªán t·∫°i:<br>";
        echo "- Field: " . $id_column['Field'] . "<br>";
        echo "- Type: " . $id_column['Type'] . "<br>";
        echo "- Null: " . $id_column['Null'] . "<br>";
        echo "- Key: " . $id_column['Key'] . "<br>";
        echo "- Default: " . $id_column['Default'] . "<br>";
        echo "- Extra: " . $id_column['Extra'] . "<br><br>";
        
        if ($id_column['Key'] === '' && $id_column['Extra'] === '') {
            echo "‚ö† C·ªôt id ch∆∞a c√≥ PRIMARY KEY v√† AUTO_INCREMENT<br>";
            echo "C·∫ßn s·ª≠a ch·ªØa...<br><br>";
        } else {
            echo "‚úÖ C·ªôt id ƒë√£ c√≥ PRIMARY KEY v√† AUTO_INCREMENT<br>";
            return;
        }
    }
    
    // 2. Ki·ªÉm tra d·ªØ li·ªáu hi·ªán t·∫°i
    echo "<h3>2. Ki·ªÉm tra d·ªØ li·ªáu hi·ªán t·∫°i</h3>";
    
    $stmt = $pdo->query("SELECT COUNT(*) as total FROM leave_requests");
    $total = $stmt->fetch(PDO::FETCH_ASSOC);
    echo "T·ªïng s·ªë records: " . $total['total'] . "<br>";
    
    if ($total['total'] > 0) {
        $stmt = $pdo->query("SELECT MIN(id) as min_id, MAX(id) as max_id FROM leave_requests");
        $id_range = $stmt->fetch(PDO::FETCH_ASSOC);
        echo "ID nh·ªè nh·∫•t: " . $id_range['min_id'] . "<br>";
        echo "ID l·ªõn nh·∫•t: " . $id_range['max_id'] . "<br>";
        
        // Ki·ªÉm tra xem c√≥ ID = 0 kh√¥ng
        $stmt = $pdo->query("SELECT COUNT(*) as count FROM leave_requests WHERE id = 0");
        $zero_count = $stmt->fetch(PDO::FETCH_ASSOC);
        echo "Records c√≥ ID = 0: " . $zero_count['count'] . "<br><br>";
    }
    
    // 3. S·ª≠a ch·ªØa c·∫•u tr√∫c b·∫£ng
    echo "<h3>3. S·ª≠a ch·ªØa c·∫•u tr√∫c b·∫£ng</h3>";
    
    // B∆∞·ªõc 1: Th√™m PRIMARY KEY cho c·ªôt id
    echo "B∆∞·ªõc 1: Th√™m PRIMARY KEY cho c·ªôt id...<br>";
    try {
        $sql = "ALTER TABLE leave_requests MODIFY COLUMN id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY";
        $pdo->exec($sql);
        echo "‚úÖ ƒê√£ th√™m PRIMARY KEY v√† AUTO_INCREMENT cho c·ªôt id<br>";
    } catch (Exception $e) {
        echo "‚ùå L·ªói khi th√™m PRIMARY KEY: " . $e->getMessage() . "<br>";
        
        // Th·ª≠ c√°ch kh√°c n·∫øu c√≥ d·ªØ li·ªáu
        if ($total['total'] > 0) {
            echo "Th·ª≠ c√°ch kh√°c...<br>";
            
            // T·∫°o b·∫£ng t·∫°m
            $temp_table = "leave_requests_temp_" . time();
            $sql = "CREATE TABLE $temp_table LIKE leave_requests";
            $pdo->exec($sql);
            echo "‚úì ƒê√£ t·∫°o b·∫£ng t·∫°m: $temp_table<br>";
            
            // S·ª≠a c·∫•u tr√∫c b·∫£ng t·∫°m
            $sql = "ALTER TABLE $temp_table MODIFY COLUMN id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY";
            $pdo->exec($sql);
            echo "‚úì ƒê√£ s·ª≠a c·∫•u tr√∫c b·∫£ng t·∫°m<br>";
            
            // Copy d·ªØ li·ªáu
            $sql = "INSERT INTO $temp_table SELECT * FROM leave_requests";
            $pdo->exec($sql);
            echo "‚úì ƒê√£ copy d·ªØ li·ªáu sang b·∫£ng t·∫°m<br>";
            
            // X√≥a b·∫£ng c≈© v√† ƒë·ªïi t√™n
            $pdo->exec("DROP TABLE leave_requests");
            $pdo->exec("RENAME TABLE $temp_table TO leave_requests");
            echo "‚úì ƒê√£ thay th·∫ø b·∫£ng c≈© b·∫±ng b·∫£ng m·ªõi<br>";
        }
    }
    
    // 4. Ki·ªÉm tra l·∫°i c·∫•u tr√∫c
    echo "<h3>4. Ki·ªÉm tra l·∫°i c·∫•u tr√∫c</h3>";
    
    $stmt = $pdo->query("DESCRIBE leave_requests");
    $columns = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    $id_column = null;
    foreach ($columns as $column) {
        if ($column['Field'] === 'id') {
            $id_column = $column;
            break;
        }
    }
    
    if ($id_column) {
        echo "C·ªôt id sau khi s·ª≠a:<br>";
        echo "- Field: " . $id_column['Field'] . "<br>";
        echo "- Type: " . $id_column['Type'] . "<br>";
        echo "- Null: " . $id_column['Null'] . "<br>";
        echo "- Key: " . $id_column['Key'] . "<br>";
        echo "- Default: " . $id_column['Default'] . "<br>";
        echo "- Extra: " . $id_column['Extra'] . "<br><br>";
        
        if ($id_column['Key'] === 'PRI' && strpos($id_column['Extra'], 'auto_increment') !== false) {
            echo "‚úÖ C·ªôt id ƒë√£ c√≥ PRIMARY KEY v√† AUTO_INCREMENT<br>";
        } else {
            echo "‚ùå V·∫´n ch∆∞a s·ª≠a ƒë∆∞·ª£c c·∫•u tr√∫c<br>";
        }
    }
    
    // 5. Test insert v√† lastInsertId
    echo "<h3>5. Test insert v√† lastInsertId</h3>";
    
    // T·∫°o request code test
    $current_year = date('y');
    $current_month = date('m');
    $test_code = "TEST" . $current_year . $current_month . "002";
    
    // Test insert
    $sql = "INSERT INTO leave_requests (
        request_code, requester_id, requester_position, requester_department, requester_office,
        start_date, end_date, return_date, leave_days, leave_type, reason, handover_to,
        attachment, status, created_at
    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, NOW())";
    
    $stmt = $pdo->prepare($sql);
    $result = $stmt->execute([
        $test_code,
        1, // requester_id
        'Test Position',
        'Test Department', 
        'Test Office',
        '2025-08-06 08:00:00',
        '2025-08-06 17:00:00',
        '2025-08-07 08:00:00',
        1.0,
        'Test Leave Type',
        'Test reason for debugging',
        1,
        null,
        'Ch·ªù ph√™ duy·ªát'
    ]);
    
    if ($result) {
        $inserted_id = $pdo->lastInsertId();
        echo "‚úì Insert th√†nh c√¥ng!<br>";
        echo "lastInsertId(): " . $inserted_id . "<br>";
        
        if ($inserted_id > 0) {
            echo "‚úÖ lastInsertId() ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng<br>";
            
            // X√≥a record test
            $stmt = $pdo->prepare("DELETE FROM leave_requests WHERE id = ?");
            $stmt->execute([$inserted_id]);
            echo "‚úì ƒê√£ x√≥a record test<br>";
            
            echo "<h3 style='color: green;'>üéâ S·ª¨A CH·ªÆA TH√ÄNH C√îNG!</h3>";
            echo "<p>B·∫£ng leave_requests ƒë√£ ƒë∆∞·ª£c s·ª≠a ch·ªØa v√† s·∫µn s√†ng s·ª≠ d·ª•ng.</p>";
        } else {
            echo "‚ùå lastInsertId() v·∫´n tr·∫£ v·ªÅ 0<br>";
        }
    } else {
        echo "‚ùå Insert th·∫•t b·∫°i<br>";
    }
    
    // 6. Ki·ªÉm tra AUTO_INCREMENT
    echo "<h3>6. Ki·ªÉm tra AUTO_INCREMENT</h3>";
    
    $stmt = $pdo->query("SHOW TABLE STATUS LIKE 'leave_requests'");
    $table_status = $stmt->fetch(PDO::FETCH_ASSOC);
    
    echo "AUTO_INCREMENT hi·ªán t·∫°i: " . $table_status['Auto_increment'] . "<br>";
    echo "Engine: " . $table_status['Engine'] . "<br>";
    echo "Row format: " . $table_status['Row_format'] . "<br>";
    
} catch (Exception $e) {
    echo "<h3 style='color: red;'>‚ùå L·ªói:</h3>";
    echo "Message: " . $e->getMessage() . "<br>";
    echo "File: " . $e->getFile() . "<br>";
    echo "Line: " . $e->getLine() . "<br>";
    echo "Trace: <pre>" . $e->getTraceAsString() . "</pre>";
}
?> 