<?php
/**
 * Test Auto Increment cho b·∫£ng maintenance_tasks
 * File: test_maintenance_tasks_auto_increment.php
 * M·ª•c ƒë√≠ch: Ki·ªÉm tra xem auto-increment c√≥ ho·∫°t ƒë·ªông ƒë√∫ng kh√¥ng
 * T√°c gi·∫£: IT Support Team
 * Ng√†y t·∫°o: 2024-12-19
 */

require_once 'config/db.php';

echo "<h2>Test Auto Increment cho b·∫£ng maintenance_tasks</h2>";

try {
    // B∆∞·ªõc 1: Ki·ªÉm tra c·∫•u tr√∫c b·∫£ng
    echo "<h3>1. Ki·ªÉm tra c·∫•u tr√∫c b·∫£ng</h3>";
    $stmt = $pdo->query("DESCRIBE maintenance_tasks");
    $columns = $stmt->fetchAll();
    
    echo "<table border='1' style='border-collapse: collapse; margin: 10px 0;'>";
    echo "<tr><th>Field</th><th>Type</th><th>Null</th><th>Key</th><th>Default</th><th>Extra</th></tr>";
    foreach ($columns as $column) {
        echo "<tr>";
        echo "<td>" . $column['Field'] . "</td>";
        echo "<td>" . $column['Type'] . "</td>";
        echo "<td>" . $column['Null'] . "</td>";
        echo "<td>" . $column['Key'] . "</td>";
        echo "<td>" . $column['Default'] . "</td>";
        echo "<td>" . $column['Extra'] . "</td>";
        echo "</tr>";
    }
    echo "</table>";
    
    // B∆∞·ªõc 2: Ki·ªÉm tra gi√° tr·ªã AUTO_INCREMENT hi·ªán t·∫°i
    echo "<h3>2. Ki·ªÉm tra gi√° tr·ªã AUTO_INCREMENT hi·ªán t·∫°i</h3>";
    $stmt = $pdo->query("SHOW TABLE STATUS LIKE 'maintenance_tasks'");
    $tableStatus = $stmt->fetch();
    
    echo "<p><strong>AUTO_INCREMENT hi·ªán t·∫°i:</strong> " . ($tableStatus['Auto_increment'] ?: 'NULL') . "</p>";
    echo "<p><strong>Engine:</strong> " . $tableStatus['Engine'] . "</p>";
    echo "<p><strong>Rows:</strong> " . $tableStatus['Rows'] . "</p>";
    
    // B∆∞·ªõc 3: T√¨m ID cao nh·∫•t
    echo "<h3>3. T√¨m ID cao nh·∫•t trong b·∫£ng</h3>";
    $stmt = $pdo->query("SELECT MAX(id) as max_id, MIN(id) as min_id, COUNT(*) as total_records FROM maintenance_tasks");
    $result = $stmt->fetch();
    
    echo "<p><strong>ID cao nh·∫•t:</strong> " . ($result['max_id'] ?: 'NULL (b·∫£ng tr·ªëng)') . "</p>";
    echo "<p><strong>ID th·∫•p nh·∫•t:</strong> " . ($result['min_id'] ?: 'NULL (b·∫£ng tr·ªëng)') . "</p>";
    echo "<p><strong>T·ªïng s·ªë records:</strong> " . $result['total_records'] . "</p>";
    
    // B∆∞·ªõc 4: Ki·ªÉm tra c√≥ record n√†o c√≥ ID = 0 kh√¥ng
    echo "<h3>4. Ki·ªÉm tra records c√≥ ID = 0</h3>";
    $stmt = $pdo->query("SELECT COUNT(*) as count FROM maintenance_tasks WHERE id = 0");
    $result = $stmt->fetch();
    
    echo "<p><strong>S·ªë records c√≥ ID = 0:</strong> " . $result['count'] . "</p>";
    
    if ($result['count'] > 0) {
        echo "<p style='color: red;'><strong>‚ö†Ô∏è C·∫¢NH B√ÅO:</strong> C√≥ " . $result['count'] . " record(s) c√≥ ID = 0. ƒêi·ªÅu n√†y c√≥ th·ªÉ g√¢y ra l·ªói auto-increment.</p>";
    }
    
    // B∆∞·ªõc 5: Test insert
    echo "<h3>5. Test insert ƒë·ªÉ ki·ªÉm tra auto-increment</h3>";
    
    $testCode = 'TEST_' . date('YmdHis');
    echo "<p>ƒêang t·∫°o record test v·ªõi m√£: " . $testCode . "</p>";
    
    $stmt = $pdo->prepare("INSERT INTO maintenance_tasks (task_number, maintenance_case_id, task_name, status, created_by) VALUES (?, 1, 'Test Task', 'Ch·ªù x·ª≠ l√Ω', 1)");
    $stmt->execute([$testCode]);
    
    $testId = $pdo->lastInsertId();
    echo "<p style='color: green;'><strong>‚úì Test insert th√†nh c√¥ng!</strong></p>";
    echo "<p><strong>ID ƒë∆∞·ª£c t·∫°o:</strong> " . $testId . "</p>";
    
    // B∆∞·ªõc 6: Ki·ªÉm tra record v·ª´a t·∫°o
    $stmt = $pdo->prepare("SELECT id, task_number, created_at FROM maintenance_tasks WHERE task_number = ?");
    $stmt->execute([$testCode]);
    $testRecord = $stmt->fetch();
    
    if ($testRecord) {
        echo "<p><strong>Record test:</strong></p>";
        echo "<ul>";
        echo "<li>ID: " . $testRecord['id'] . "</li>";
        echo "<li>M√£: " . $testRecord['task_number'] . "</li>";
        echo "<li>Th·ªùi gian t·∫°o: " . $testRecord['created_at'] . "</li>";
        echo "</ul>";
    }
    
    // B∆∞·ªõc 7: X√≥a record test
    echo "<h3>6. X√≥a record test</h3>";
    $stmt = $pdo->prepare("DELETE FROM maintenance_tasks WHERE task_number = ?");
    $stmt->execute([$testCode]);
    
    echo "<p style='color: blue;'><strong>‚úì ƒê√£ x√≥a record test</strong></p>";
    
    // B∆∞·ªõc 8: Ki·ªÉm tra AUTO_INCREMENT sau khi test
    $stmt = $pdo->query("SHOW TABLE STATUS LIKE 'maintenance_tasks'");
    $tableStatusAfter = $stmt->fetch();
    
    echo "<h3>7. Ki·ªÉm tra AUTO_INCREMENT sau khi test</h3>";
    echo "<p><strong>AUTO_INCREMENT sau test:</strong> " . ($tableStatusAfter['Auto_increment'] ?: 'NULL') . "</p>";
    
    // B∆∞·ªõc 9: ƒê√°nh gi√° k·∫øt qu·∫£
    echo "<h3>8. ƒê√°nh gi√° k·∫øt qu·∫£</h3>";
    
    $maxId = $result['max_id'] ?? 0;
    $currentAutoIncrement = $tableStatusAfter['Auto_increment'] ?? 0;
    $expectedNextId = $maxId + 1;
    
    if ($currentAutoIncrement == $expectedNextId) {
        echo "<p style='color: green;'><strong>‚úÖ AUTO_INCREMENT ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng!</strong></p>";
        echo "<p>Gi√° tr·ªã AUTO_INCREMENT (" . $currentAutoIncrement . ") ƒë√∫ng b·∫±ng ID cao nh·∫•t + 1 (" . $expectedNextId . ")</p>";
    } else {
        echo "<p style='color: red;'><strong>‚ùå AUTO_INCREMENT c√≥ v·∫•n ƒë·ªÅ!</strong></p>";
        echo "<p>Gi√° tr·ªã AUTO_INCREMENT (" . $currentAutoIncrement . ") kh√°c v·ªõi ID cao nh·∫•t + 1 (" . $expectedNextId . ")</p>";
        echo "<p>B·∫°n c·∫ßn ch·∫°y file fix ƒë·ªÉ s·ª≠a l·ªói n√†y.</p>";
    }
    
    if ($testId == $expectedNextId) {
        echo "<p style='color: green;'><strong>‚úÖ Test insert th√†nh c√¥ng v·ªõi ID ƒë√∫ng!</strong></p>";
    } else {
        echo "<p style='color: red;'><strong>‚ùå Test insert c√≥ v·∫•n ƒë·ªÅ!</strong></p>";
        echo "<p>ID ƒë∆∞·ª£c t·∫°o (" . $testId . ") kh√°c v·ªõi ID mong ƒë·ª£i (" . $expectedNextId . ")</p>";
    }
    
} catch (Exception $e) {
    echo "<h3 style='color: red;'>‚úó L·ªói: " . $e->getMessage() . "</h3>";
    error_log("Error in test_maintenance_tasks_auto_increment.php: " . $e->getMessage());
}

echo "<hr>";
echo "<p><a href='maintenance_requests.php'>‚Üê Quay l·∫°i trang Y√™u c·∫ßu b·∫£o tr√¨</a></p>";
echo "<p><a href='fix_maintenance_cases_auto_increment.php'>üîß Ch·∫°y fix auto-increment cho Cases</a></p>";
echo "<p><a href='fix_maintenance_tasks_auto_increment.php'>üîß Ch·∫°y fix auto-increment cho Tasks</a></p>";
?>
